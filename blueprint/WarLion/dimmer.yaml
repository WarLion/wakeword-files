blueprint:
  name:  ZEN30 Hold to Dim/Brighten
  description: test blueprint
  domain: automation
  input:
    node_id:
      name: ZEN30 Node ID
      description: Z-Wave node ID of the ZEN30 switch.
      selector:
        number:
          min: 1
          max: 255
          mode: box
    target_light:
      name: Light to Control
      description: Light or light group to control
      selector:
        target:
          entity:
            domain: light
    brightness_step:
      name: Brightness step
      description: Percent step per tick (e.g., 5 = 5%)
      default: 5
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: '%'
          mode: slider
    step_delay:
      name: Delay between steps
      description: Time delay between each dim step
      default: 0.2
      selector:
        number:
          min: 0.1
          max: 1
          step: 0.05
          unit_of_measurement: seconds
          mode: slider

mode: restart

trigger:
  - platform: event
    event_type: zwave_js_event
    event_data:
      label: KeyHeld
    id: held
  - platform: event
    event_type: zwave_js_event
    event_data:
      label: KeyReleased
    id: released

condition:
  - condition: template
    value_template: "{{ trigger.event.data.node_id == node_id }}"

variables:
  node_id: !input node_id
  light_target: !input target_light
  step: !input brightness_step
  delay_between: !input step_delay
  is_dimming: "{{ trigger.event.data.scene == 2 }}"

action:
  - choose:
      - conditions:
          - condition: trigger
            id: held
        sequence:
          - repeat:
              until:
                - condition: template
                  value_template: "{{ wait.trigger.event.data.label == 'KeyReleased' and wait.trigger.event.data.node_id == node_id and wait.trigger.event.data.scene == trigger.event.data.scene }}"
              sequence:
                - service: light.turn_on
                  target: "{{ light_target }}"
                  data:
                    brightness_step_pct: "{{ -step if is_dimming else step }}"
                    transition: 0.2
                - delay: "{{ delay_between }}"
                - wait_for_trigger:
                    - platform: event
                      event_type: zwave_js_event
                      event_data:
                        label: KeyReleased
                        node_id: "{{ node_id }}"
                        scene: "{{ trigger.event.data.scene }}"
